/* tslint:disable */
/* eslint-disable */
/**
 * Account API
 * With the Account service you can manage your API keys and track their usage. It is important to note that unlike all other APIs, the Account API needs a master API key for authentication. For more details consult the [concept](./concepts/api-key-management-and-usage).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TotalServiceUsage
 */
export interface TotalServiceUsage {
    /**
     * The name of the service.
     * @type {string}
     * @memberof TotalServiceUsage
     */
    name?: string;
    /**
     * Transactions charged by this service.
     * @type {number}
     * @memberof TotalServiceUsage
     */
    transactions?: number;
    /**
     * Requests sent to this service.
     * @type {number}
     * @memberof TotalServiceUsage
     */
    requests?: number;
}

/**
 * Check if a given object implements the TotalServiceUsage interface.
 */
export function instanceOfTotalServiceUsage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TotalServiceUsageFromJSON(json: any): TotalServiceUsage {
    return TotalServiceUsageFromJSONTyped(json, false);
}

export function TotalServiceUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): TotalServiceUsage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'transactions': !exists(json, 'transactions') ? undefined : json['transactions'],
        'requests': !exists(json, 'requests') ? undefined : json['requests'],
    };
}

export function TotalServiceUsageToJSON(value?: TotalServiceUsage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'transactions': value.transactions,
        'requests': value.requests,
    };
}

